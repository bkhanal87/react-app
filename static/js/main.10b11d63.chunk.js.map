{"version":3,"sources":["components/HelloReact.js","App.js","index.js"],"names":["HelloReact","App","ReactDOM","render","document","getElementById"],"mappings":"+JAeeA,MAVf,WAOE,OAAO,sDANM,gBCIAC,MAJf,WACE,OAAO,cAAC,EAAD,KCOTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.10b11d63.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// TODO: Add a comment explaining what a react component is\r\n// Components are responsible for rendering some part of an application's UI.\r\n// Components let us split the UI into independent, reusable pieces, and also think about each piece in isolation.\r\nfunction HelloReact() {\r\n  const text = 'some text';\r\n\r\n  // TODO: Add a comment explaining what JSX is and the significance of the curly braces\r\n  // JSX is a syntax extension to JavaScript that looks like HTML.\r\n  // JSX is compiled by something called \"Babel\" into widely supported ES5 syntax.\r\n  // The curly braces allow us to pass values and expressions into our view.\r\n  return <p>Hello World! Here is {text}</p>;\r\n}\r\n\r\nexport default HelloReact;\r\n","import React from 'react';\r\nimport HelloReact from './components/HelloReact';\r\n\r\n// TODO: Add a comment explaining what this function is doing\r\n// This function is a functional component that helps us split the UI into distinct parts.\r\n// In this case, we are returning another component, <HelloReact/> from it.\r\nfunction App() {\r\n  return <HelloReact />;\r\n}\r\n\r\nexport default App;\r\n","// TODO: Add a comment giving a brief description of what React is\r\n// React is a javaScript library for building user interfaces.\r\n\r\nimport React from 'react';\r\n\r\n// TODO: Add a comment that describes the difference between react and react-dom\r\n// The react module is an entry point to the React library, while react-dom provides access to DOM-specific methods.\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n// TODO: Add a comment describing the significance of the ReactDOM.render method\r\n// ReactDOM.render takes a React component, or tree of React components and (eventually) renders them to the DOM.\r\n// The first argument is the component we want to render (<App/>), and second is the target element to render to (#root)\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}