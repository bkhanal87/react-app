{"version":3,"sources":["components/SearchBar.js","components/IssueItem.js","components/IssueList.js","App.js","index.js"],"names":["SearchBar","onFormSubmit","useState","term","setTerm","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","IssueItem","issue","href","html_url","rel","title","description","IssueList","renderedList","issues","map","id","App","setIssues","useEffect","document","repo","issuesURL","console","log","fetch","then","res","json","response","ReactDOM","render","getElementById"],"mappings":"yKA+BeA,MA3Bf,YAAsC,IAAjBC,EAAgB,EAAhBA,aAEnB,EAAwBC,mBAAS,oBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACE,qBAAKC,UAAU,wBAAf,SACE,sBAAMA,UAAU,UAAUC,SARb,SAACC,GAChBA,EAAEC,iBAEFP,EAAaE,IAKX,SACE,sBAAKE,UAAU,QAAf,UACE,2DACA,uBACEI,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACJ,GAAD,OAAOH,EAAQG,EAAEK,OAAOF,QAClCG,YAAY,2BCATC,EAnBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,sBAAKV,UAAU,OAAf,UACE,mBAAGA,UAAU,qCACb,sBAAKA,UAAU,UAAf,UACE,mBACEA,UAAU,SACVW,KAAMD,EAAME,SACZL,OAAO,SACPM,IAAI,aAJN,SAMGH,EAAMI,QAET,qBAAKd,UAAU,cAAf,SAA8BU,EAAMK,qBCH7BC,EAVG,SAAC,GAAgB,IAE3BC,EAF0B,EAAbC,OAESC,KAAI,SAACT,GAC/B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMU,OAI/B,OAAO,qBAAKpB,UAAU,0BAAf,SAA0CiB,KC4BpCI,MAlCf,WAEE,MAA4BxB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeI,EAAf,KAiBA,OAbAC,qBAAU,WACRC,SAASV,MAAQ,kBAChB,IAYD,sBAAKd,UAAU,eAAf,UAEE,cAAC,EAAD,CAAWJ,aAXO,SAAC6B,GACrB,IAAIC,EAAS,uCAAmCD,EAAnC,yBACbE,QAAQC,IAAI,YAAaF,GACzBG,MAAMH,GACHI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAcX,EAAUW,SAO9B,qBAAKjC,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAWkB,OAAQA,cC3B/BgB,IAASC,OAAO,cAAC,EAAD,IAASX,SAASY,eAAe,W","file":"static/js/main.41e0c796.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// We take our props object and assign each property to it's own variable name.\r\n// In this case we only passed one prop, `onFormSubmit`\r\nfunction SearchBar({ onFormSubmit }) {\r\n  // Our state variable for the search term. Defaults to \"microsoft/vscode\".\r\n  const [term, setTerm] = useState('microsoft/vscode');\r\n\r\n  const sendTerm = (e) => {\r\n    e.preventDefault();\r\n\r\n    onFormSubmit(term);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar ui segment\">\r\n      <form className=\"ui form\" onSubmit={sendTerm}>\r\n        <div className=\"field\">\r\n          <label>Retrieve GitHub Issues</label>\r\n          <input\r\n            type=\"text\"\r\n            value={term}\r\n            onChange={(e) => setTerm(e.target.value)}\r\n            placeholder=\"facebook/react\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\n// Issue item accepts a single issue as a prop\r\n// This component is solely responsible for displaying the specific information for a given issue\r\nconst IssueItem = ({ issue }) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <i className=\"large github middle aligned icon\"></i>\r\n      <div className=\"content\">\r\n        <a\r\n          className=\"header\"\r\n          href={issue.html_url}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          {issue.title}\r\n        </a>\r\n        <div className=\"description\">{issue.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueItem;\r\n","import React from 'react';\r\nimport IssueItem from '../components/IssueItem';\r\n\r\n// Here we accept an array of issues as a prop\r\nconst IssueList = ({ issues }) => {\r\n  // We create a list of rendered IssueItems by using the map method on `issues`\r\n  const renderedList = issues.map((issue) => {\r\n    return <IssueItem key={issue.id} issue={issue} />;\r\n  });\r\n\r\n  // Here we return our array of IssueItems wrapped inside a parent div\r\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\r\n};\r\n\r\nexport default IssueList;\r\n","// We import useState and useEffect in our component\r\nimport React, { useState, useEffect } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport IssueList from './components/IssueList';\r\n\r\nfunction App() {\r\n  // We declare a state variable that is an array called `issues` and a function to update it.\r\n  const [issues, setIssues] = useState([]);\r\n\r\n  // When the page loads, set the document title to something specific to this app.\r\n  // This only runs once because of our empty dependency array.\r\n  useEffect(() => {\r\n    document.title = 'GitHub issues';\r\n  }, []);\r\n\r\n  // Helper function that performs an API request and sets the `issues` array to a list of issues from GitHub\r\n  const getRepoIssues = (repo) => {\r\n    let issuesURL = `https://api.github.com/repos/${repo}/issues?direction=asc`;\r\n    console.log('issuesURL', issuesURL);\r\n    fetch(issuesURL)\r\n      .then((res) => res.json())\r\n      .then((response) => setIssues(response));\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      {/* Here we pass our getRepoIssues function as a prop to SearchBar */}\r\n      <SearchBar onFormSubmit={getRepoIssues} />\r\n      <div className=\"ui grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n            <IssueList issues={issues} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}